p.treat = "",  n.group = ""
# size.ben=""
) %>%
set_table_properties( layout = "autofit", width = .8)
ft<-ft %>% add_header_row(values = c("Control Rate", "Treatment Rate",
"Num of patients/group",
# "RR Reduction",
"Bayesian power for different levels of evidence*"),
colwidths = c(1,1,1,ncol_keys(ft)-3)) %>%
add_footer_lines( values = "*Power to declare efficacy when Prob(RR < 1 ) > specified threshold")
ft<-ft <- set_caption(ft,
caption = "Bayesian power to declare efficacy depending on level of evidence (probability threshold)")
ft<-ft %>% align(align = "center",part="body") %>% align(align = "center",part="header") %>% autofit()
ft
nsim<-5000
# Sample size in each group; can be a vector for more than one scenario
n.samp<-c(2200,3200,4300)
res.all<-list()
# log RR of clinically important effect sizes
eff.size<-c(0,log(.85),log(.8))
for(i in 1:length(n.samp)){
ntreat<-ncontrol<-n.samp[i]
sims<-replicate(nsim,bayes_bin_prop(ptreat,pcontrol,ntreat,ncontrol,effect.post = eff.size))
#calculating power for different post probability thresholds
# change this if you want different thresholds
results<-matrix(NA,nrow=nrow(sims),ncol=length(prob.thresh))
for(k in 1:nrow(sims)){
results[k,]<-mean_vec_gt(sims[k,],prob.thresh)
}
# Turning power results into dataframe and adding column names
res<-data.frame(p.control=pcontrol,p.treat=ptreat,prior.mean=priormu1,prior.sd=priorsd1,n.group=ntreat,round(results,2))
names(res)[6:(5+length(prob.thresh))]<-paste0(prob.thresh*100,"%")
# res$size.ben<-c("Any","5%","10%")
res.all[[i]]<-res
}
res.all
# Collapsing over effect size of interest
all_res<-dplyr::bind_rows(res.all)
all_res$size.ben<-rep(round(eff.size,2)*(-100),length(n.samp))
# Create flextable -----------
ft <- all_res%>%filter(size.ben==0)%>%
select(p.control,p.treat,n.group,
# size.ben,
"70%","75%","80%","85%","90%","95%")%>%
flextable() %>% set_header_labels(p.control = "",
p.treat = "",  n.group = ""
# size.ben=""
) %>%
set_table_properties( layout = "autofit", width = .8)
ft<-ft %>% add_header_row(values = c("Control Rate", "Treatment Rate",
"Num of patients/group",
# "RR Reduction",
"Bayesian power for different levels of evidence*"),
colwidths = c(1,1,1,ncol_keys(ft)-3)) %>%
add_footer_lines( values = "*Power to declare efficacy when Prob(RR < 1 ) > specified threshold")
ft<-ft <- set_caption(ft,
caption = "Bayesian power to declare efficacy depending on level of evidence (probability threshold)")
ft<-ft %>% align(align = "center",part="body") %>% align(align = "center",part="header") %>% autofit()
ft
nsim<-5000
# Sample size in each group; can be a vector for more than one scenario
n.samp<-c(2200,3200,4300)
res.all<-list()
# log RR of clinically important effect sizes
eff.size<-c(0,log(.85),log(.8))
for(i in 1:length(n.samp)){
ntreat<-ncontrol<-n.samp[i]
sims<-replicate(nsim,bayes_bin_prop(ptreat,pcontrol,ntreat,ncontrol,effect.post = eff.size))
#calculating power for different post probability thresholds
# change this if you want different thresholds
results<-matrix(NA,nrow=nrow(sims),ncol=length(prob.thresh))
for(k in 1:nrow(sims)){
results[k,]<-mean_vec_gt(sims[k,],prob.thresh)
}
# Turning power results into dataframe and adding column names
res<-data.frame(p.control=pcontrol,p.treat=ptreat,prior.mean=priormu1,prior.sd=priorsd1,n.group=ntreat,round(results,2))
names(res)[6:(5+length(prob.thresh))]<-paste0(prob.thresh*100,"%")
# res$size.ben<-c("Any","5%","10%")
res.all[[i]]<-res
}
res.all
# Collapsing over effect size of interest
all_res<-dplyr::bind_rows(res.all)
all_res$size.ben<-rep(round(eff.size,2)*(-100),length(n.samp))
# Create flextable -----------
ft <- all_res%>%filter(size.ben==0)%>%
select(p.control,p.treat,n.group,
# size.ben,
"70%","75%","80%","85%","90%","95%")%>%
flextable() %>% set_header_labels(p.control = "",
p.treat = "",  n.group = ""
# size.ben=""
) %>%
set_table_properties( layout = "autofit", width = .8)
ft<-ft %>% add_header_row(values = c("Control Rate", "Treatment Rate",
"Num of patients/group",
# "RR Reduction",
"Bayesian power for different levels of evidence*"),
colwidths = c(1,1,1,ncol_keys(ft)-3)) %>%
add_footer_lines( values = "*Power to declare efficacy when Prob(RR < 1 ) > specified threshold")
ft<-ft <- set_caption(ft,
caption = "Bayesian power to declare efficacy depending on level of evidence (probability threshold)")
ft<-ft %>% align(align = "center",part="body") %>% align(align = "center",part="header") %>% autofit()
ft
nsim<-5000
# Sample size in each group; can be a vector for more than one scenario
n.samp<-c(2200,3200,4300)
res.all<-list()
# log RR of clinically important effect sizes
eff.size<-c(0,log(.85),log(.8))
for(i in 1:length(n.samp)){
ntreat<-ncontrol<-n.samp[i]
sims<-replicate(nsim,bayes_bin_prop(ptreat,pcontrol,ntreat,ncontrol,effect.post = eff.size))
#calculating power for different post probability thresholds
# change this if you want different thresholds
results<-matrix(NA,nrow=nrow(sims),ncol=length(prob.thresh))
for(k in 1:nrow(sims)){
results[k,]<-mean_vec_gt(sims[k,],prob.thresh)
}
# Turning power results into dataframe and adding column names
res<-data.frame(p.control=pcontrol,p.treat=ptreat,prior.mean=priormu1,prior.sd=priorsd1,n.group=ntreat,round(results,2))
names(res)[6:(5+length(prob.thresh))]<-paste0(prob.thresh*100,"%")
# res$size.ben<-c("Any","5%","10%")
res.all[[i]]<-res
}
res.all
# Collapsing over effect size of interest
all_res<-dplyr::bind_rows(res.all)
all_res$size.ben<-rep(round(eff.size,2)*(-100),length(n.samp))
# Create flextable -----------
ft <- all_res%>%filter(size.ben==0)%>%
select(p.control,p.treat,n.group,
# size.ben,
"70%","75%","80%","85%","90%","95%")%>%
flextable() %>% set_header_labels(p.control = "",
p.treat = "",  n.group = ""
# size.ben=""
) %>%
set_table_properties( layout = "autofit", width = .8)
ft<-ft %>% add_header_row(values = c("Control Rate", "Treatment Rate",
"Num of patients/group",
# "RR Reduction",
"Bayesian power for different levels of evidence*"),
colwidths = c(1,1,1,ncol_keys(ft)-3)) %>%
add_footer_lines( values = "*Power to declare efficacy when Prob(RR < 1 ) > specified threshold")
ft<-ft <- set_caption(ft,
caption = "Bayesian power to declare efficacy depending on level of evidence (probability threshold)")
ft<-ft %>% align(align = "center",part="body") %>% align(align = "center",part="header") %>% autofit()
ft
nsim<-5000
# Sample size in each group; can be a vector for more than one scenario
n.samp<-c(2200,3200,4300)
res.all<-list()
# log RR of clinically important effect sizes
eff.size<-c(0,log(.85),log(.8))
for(i in 1:length(n.samp)){
ntreat<-ncontrol<-n.samp[i]
sims<-replicate(nsim,bayes_bin_prop(ptreat,pcontrol,ntreat,ncontrol,effect.post = eff.size))
#calculating power for different post probability thresholds
# change this if you want different thresholds
results<-matrix(NA,nrow=nrow(sims),ncol=length(prob.thresh))
for(k in 1:nrow(sims)){
results[k,]<-mean_vec_gt(sims[k,],prob.thresh)
}
# Turning power results into dataframe and adding column names
res<-data.frame(p.control=pcontrol,p.treat=ptreat,prior.mean=priormu1,prior.sd=priorsd1,n.group=ntreat,round(results,2))
names(res)[6:(5+length(prob.thresh))]<-paste0(prob.thresh*100,"%")
# res$size.ben<-c("Any","5%","10%")
res.all[[i]]<-res
}
res.all
# Collapsing over effect size of interest
all_res<-dplyr::bind_rows(res.all)
all_res$size.ben<-rep(round(eff.size,2)*(-100),length(n.samp))
# Create flextable -----------
ft <- all_res%>%filter(size.ben==0)%>%
select(p.control,p.treat,n.group,
# size.ben,
"70%","75%","80%","85%","90%","95%")%>%
flextable() %>% set_header_labels(p.control = "",
p.treat = "",  n.group = ""
# size.ben=""
) %>%
set_table_properties( layout = "autofit", width = .8)
ft<-ft %>% add_header_row(values = c("Control Rate", "Treatment Rate",
"Num of patients/group",
# "RR Reduction",
"Bayesian power for different levels of evidence*"),
colwidths = c(1,1,1,ncol_keys(ft)-3)) %>%
add_footer_lines( values = "*Power to declare efficacy when Prob(RR < 1 ) > specified threshold")
ft<-ft <- set_caption(ft,
caption = "Bayesian power to declare efficacy depending on level of evidence (probability threshold)")
ft<-ft %>% align(align = "center",part="body") %>% align(align = "center",part="header") %>% autofit()
ft
priorsd1
priorsd1<-1
nsim<-5000
# Sample size in each group; can be a vector for more than one scenario
n.samp<-c(2200,3200,4300)
res.all<-list()
# log RR of clinically important effect sizes
eff.size<-c(0,log(.85),log(.8))
for(i in 1:length(n.samp)){
ntreat<-ncontrol<-n.samp[i]
sims<-replicate(nsim,bayes_bin_prop(ptreat,pcontrol,ntreat,ncontrol,effect.post = eff.size))
#calculating power for different post probability thresholds
# change this if you want different thresholds
results<-matrix(NA,nrow=nrow(sims),ncol=length(prob.thresh))
for(k in 1:nrow(sims)){
results[k,]<-mean_vec_gt(sims[k,],prob.thresh)
}
# Turning power results into dataframe and adding column names
res<-data.frame(p.control=pcontrol,p.treat=ptreat,prior.mean=priormu1,prior.sd=priorsd1,n.group=ntreat,round(results,2))
names(res)[6:(5+length(prob.thresh))]<-paste0(prob.thresh*100,"%")
# res$size.ben<-c("Any","5%","10%")
res.all[[i]]<-res
}
res.all
# Collapsing over effect size of interest
all_res<-dplyr::bind_rows(res.all)
all_res$size.ben<-rep(round(eff.size,2)*(-100),length(n.samp))
# Create flextable -----------
ft <- all_res%>%filter(size.ben==0)%>%
select(p.control,p.treat,n.group,
# size.ben,
"70%","75%","80%","85%","90%","95%")%>%
flextable() %>% set_header_labels(p.control = "",
p.treat = "",  n.group = ""
# size.ben=""
) %>%
set_table_properties( layout = "autofit", width = .8)
ft<-ft %>% add_header_row(values = c("Control Rate", "Treatment Rate",
"Num of patients/group",
# "RR Reduction",
"Bayesian power for different levels of evidence*"),
colwidths = c(1,1,1,ncol_keys(ft)-3)) %>%
add_footer_lines( values = "*Power to declare efficacy when Prob(RR < 1 ) > specified threshold")
ft<-ft <- set_caption(ft,
caption = "Bayesian power to declare efficacy depending on level of evidence (probability threshold)")
ft<-ft %>% align(align = "center",part="body") %>% align(align = "center",part="header") %>% autofit()
ft
nsim<-5000
# Sample size in each group; can be a vector for more than one scenario
n.samp<-c(1800,3000,4000)
res.all<-list()
# log RR of clinically important effect sizes
eff.size<-c(0,log(.85),log(.8))
for(i in 1:length(n.samp)){
ntreat<-ncontrol<-n.samp[i]
sims<-replicate(nsim,bayes_bin_prop(ptreat,pcontrol,ntreat,ncontrol,effect.post = eff.size))
#calculating power for different post probability thresholds
# change this if you want different thresholds
results<-matrix(NA,nrow=nrow(sims),ncol=length(prob.thresh))
for(k in 1:nrow(sims)){
results[k,]<-mean_vec_gt(sims[k,],prob.thresh)
}
# Turning power results into dataframe and adding column names
res<-data.frame(p.control=pcontrol,p.treat=ptreat,prior.mean=priormu1,prior.sd=priorsd1,n.group=ntreat,round(results,2))
names(res)[6:(5+length(prob.thresh))]<-paste0(prob.thresh*100,"%")
# res$size.ben<-c("Any","5%","10%")
res.all[[i]]<-res
}
res.all
# Collapsing over effect size of interest
all_res<-dplyr::bind_rows(res.all)
all_res$size.ben<-rep(round(eff.size,2)*(-100),length(n.samp))
# Create flextable -----------
ft <- all_res%>%filter(size.ben==0)%>%
select(p.control,p.treat,n.group,
# size.ben,
"70%","75%","80%","85%","90%","95%")%>%
flextable() %>% set_header_labels(p.control = "",
p.treat = "",  n.group = ""
# size.ben=""
) %>%
set_table_properties( layout = "autofit", width = .8)
ft<-ft %>% add_header_row(values = c("Control Rate", "Treatment Rate",
"Num of patients/group",
# "RR Reduction",
"Bayesian power for different levels of evidence*"),
colwidths = c(1,1,1,ncol_keys(ft)-3)) %>%
add_footer_lines( values = "*Power to declare efficacy when Prob(RR < 1 ) > specified threshold")
ft<-ft <- set_caption(ft,
caption = "Bayesian power to declare efficacy depending on level of evidence (probability threshold)")
ft<-ft %>% align(align = "center",part="body") %>% align(align = "center",part="header") %>% autofit()
ft
nsim<-5000
# Sample size in each group; can be a vector for more than one scenario
n.samp<-c(1700,2700,3700)
res.all<-list()
# log RR of clinically important effect sizes
eff.size<-c(0,log(.85),log(.8))
for(i in 1:length(n.samp)){
ntreat<-ncontrol<-n.samp[i]
sims<-replicate(nsim,bayes_bin_prop(ptreat,pcontrol,ntreat,ncontrol,effect.post = eff.size))
#calculating power for different post probability thresholds
# change this if you want different thresholds
results<-matrix(NA,nrow=nrow(sims),ncol=length(prob.thresh))
for(k in 1:nrow(sims)){
results[k,]<-mean_vec_gt(sims[k,],prob.thresh)
}
# Turning power results into dataframe and adding column names
res<-data.frame(p.control=pcontrol,p.treat=ptreat,prior.mean=priormu1,prior.sd=priorsd1,n.group=ntreat,round(results,2))
names(res)[6:(5+length(prob.thresh))]<-paste0(prob.thresh*100,"%")
# res$size.ben<-c("Any","5%","10%")
res.all[[i]]<-res
}
res.all
# Collapsing over effect size of interest
all_res<-dplyr::bind_rows(res.all)
all_res$size.ben<-rep(round(eff.size,2)*(-100),length(n.samp))
# Create flextable -----------
ft <- all_res%>%filter(size.ben==0)%>%
select(p.control,p.treat,n.group,
# size.ben,
"70%","75%","80%","85%","90%","95%")%>%
flextable() %>% set_header_labels(p.control = "",
p.treat = "",  n.group = ""
# size.ben=""
) %>%
set_table_properties( layout = "autofit", width = .8)
ft<-ft %>% add_header_row(values = c("Control Rate", "Treatment Rate",
"Num of patients/group",
# "RR Reduction",
"Bayesian power for different levels of evidence*"),
colwidths = c(1,1,1,ncol_keys(ft)-3)) %>%
add_footer_lines( values = "*Power to declare efficacy when Prob(RR < 1 ) > specified threshold")
ft<-ft <- set_caption(ft,
caption = "Bayesian power to declare efficacy depending on level of evidence (probability threshold)")
ft<-ft %>% align(align = "center",part="body") %>% align(align = "center",part="header") %>% autofit()
ft
nsim<-5000
# Sample size in each group; can be a vector for more than one scenario
n.samp<-c(1700,2700,3700)
res.all<-list()
# log RR of clinically important effect sizes
eff.size<-c(0,log(.85),log(.8))
for(i in 1:length(n.samp)){
ntreat<-ncontrol<-n.samp[i]
sims<-replicate(nsim,bayes_bin_prop(ptreat,pcontrol,ntreat,ncontrol,effect.post = eff.size))
#calculating power for different post probability thresholds
# change this if you want different thresholds
results<-matrix(NA,nrow=nrow(sims),ncol=length(prob.thresh))
for(k in 1:nrow(sims)){
results[k,]<-mean_vec_gt(sims[k,],prob.thresh)
}
# Turning power results into dataframe and adding column names
res<-data.frame(p.control=pcontrol,p.treat=ptreat,prior.mean=priormu1,prior.sd=priorsd1,n.group=ntreat,round(results,2))
names(res)[6:(5+length(prob.thresh))]<-paste0(prob.thresh*100,"%")
# res$size.ben<-c("Any","5%","10%")
res.all[[i]]<-res
}
res.all
# Collapsing over effect size of interest
all_res<-dplyr::bind_rows(res.all)
all_res$size.ben<-rep(round(eff.size,2)*(-100),length(n.samp))
# Create flextable -----------
ft <- all_res%>%filter(size.ben==0)%>%
select(p.control,p.treat,n.group,
# size.ben,
"70%","75%","80%","85%","90%","95%")%>%
flextable() %>% set_header_labels(p.control = "",
p.treat = "",  n.group = ""
# size.ben=""
) %>%
set_table_properties( layout = "autofit", width = .8)
ft<-ft %>% add_header_row(values = c("Control Rate", "Treatment Rate",
"Num of patients/group",
# "RR Reduction",
"Bayesian power for different levels of evidence*"),
colwidths = c(1,1,1,ncol_keys(ft)-3)) %>%
add_footer_lines( values = "*Power to declare efficacy when Prob(RR < 1 ) > specified threshold")
ft<-ft <- set_caption(ft,
caption = "Bayesian power to declare efficacy depending on level of evidence (probability threshold)")
ft<-ft %>% align(align = "center",part="body") %>% align(align = "center",part="header") %>% autofit()
ft
nsim<-5000
# Sample size in each group; can be a vector for more than one scenario
n.samp<-c(1700,2700,3500)
res.all<-list()
# log RR of clinically important effect sizes
eff.size<-c(0,log(.85),log(.8))
for(i in 1:length(n.samp)){
ntreat<-ncontrol<-n.samp[i]
sims<-replicate(nsim,bayes_bin_prop(ptreat,pcontrol,ntreat,ncontrol,effect.post = eff.size))
#calculating power for different post probability thresholds
# change this if you want different thresholds
results<-matrix(NA,nrow=nrow(sims),ncol=length(prob.thresh))
for(k in 1:nrow(sims)){
results[k,]<-mean_vec_gt(sims[k,],prob.thresh)
}
# Turning power results into dataframe and adding column names
res<-data.frame(p.control=pcontrol,p.treat=ptreat,prior.mean=priormu1,prior.sd=priorsd1,n.group=ntreat,round(results,2))
names(res)[6:(5+length(prob.thresh))]<-paste0(prob.thresh*100,"%")
# res$size.ben<-c("Any","5%","10%")
res.all[[i]]<-res
}
res.all
# Collapsing over effect size of interest
all_res<-dplyr::bind_rows(res.all)
all_res$size.ben<-rep(round(eff.size,2)*(-100),length(n.samp))
# Create flextable -----------
ft <- all_res%>%filter(size.ben==0)%>%
select(p.control,p.treat,n.group,
# size.ben,
"70%","75%","80%","85%","90%","95%")%>%
flextable() %>% set_header_labels(p.control = "",
p.treat = "",  n.group = ""
# size.ben=""
) %>%
set_table_properties( layout = "autofit", width = .8)
ft<-ft %>% add_header_row(values = c("Control Rate", "Treatment Rate",
"Num of patients/group",
# "RR Reduction",
"Bayesian power for different levels of evidence*"),
colwidths = c(1,1,1,ncol_keys(ft)-3)) %>%
add_footer_lines( values = "*Power to declare efficacy when Prob(RR < 1 ) > specified threshold")
ft<-ft <- set_caption(ft,
caption = "Bayesian power to declare efficacy depending on level of evidence (probability threshold)")
ft<-ft %>% align(align = "center",part="body") %>% align(align = "center",part="header") %>% autofit()
ft
nsim<-5000
# Sample size in each group; can be a vector for more than one scenario
n.samp<-c(1700,2700,3500)
res.all<-list()
# log RR of clinically important effect sizes
eff.size<-c(0,log(.85),log(.8))
for(i in 1:length(n.samp)){
ntreat<-ncontrol<-n.samp[i]
sims<-replicate(nsim,bayes_bin_prop(ptreat,pcontrol,ntreat,ncontrol,effect.post = eff.size))
#calculating power for different post probability thresholds
# change this if you want different thresholds
results<-matrix(NA,nrow=nrow(sims),ncol=length(prob.thresh))
for(k in 1:nrow(sims)){
results[k,]<-mean_vec_gt(sims[k,],prob.thresh)
}
# Turning power results into dataframe and adding column names
res<-data.frame(p.control=pcontrol,p.treat=ptreat,prior.mean=priormu1,prior.sd=priorsd1,n.group=ntreat,round(results,2))
names(res)[6:(5+length(prob.thresh))]<-paste0(prob.thresh*100,"%")
# res$size.ben<-c("Any","5%","10%")
res.all[[i]]<-res
}
res.all
# Collapsing over effect size of interest
all_res<-dplyr::bind_rows(res.all)
all_res$size.ben<-rep(round(eff.size,2)*(-100),length(n.samp))
# Create flextable -----------
ft <- all_res%>%filter(size.ben==0)%>%
select(p.control,p.treat,n.group,
# size.ben,
"70%","75%","80%","85%","90%","95%")%>%
flextable() %>% set_header_labels(p.control = "",
p.treat = "",  n.group = ""
# size.ben=""
) %>%
set_table_properties( layout = "autofit", width = .8)
ft<-ft %>% add_header_row(values = c("Control Rate", "Treatment Rate",
"Num of patients/group",
# "RR Reduction",
"Bayesian power for different levels of evidence*"),
colwidths = c(1,1,1,ncol_keys(ft)-3)) %>%
add_footer_lines( values = "*Power to declare efficacy when Prob(RR < 1 ) > specified threshold")
ft<-ft <- set_caption(ft,
caption = "Bayesian power to declare efficacy depending on level of evidence (probability threshold)")
ft<-ft %>% align(align = "center",part="body") %>% align(align = "center",part="header") %>% autofit()
ft
nsim<-5000
# Sample size in each group; can be a vector for more than one scenario
n.samp<-c(1700,2700,3500)
res.all<-list()
# log RR of clinically important effect sizes
eff.size<-c(0,log(.85),log(.8))
for(i in 1:length(n.samp)){
ntreat<-ncontrol<-n.samp[i]
sims<-replicate(nsim,bayes_bin_prop(ptreat,pcontrol,ntreat,ncontrol,effect.post = eff.size))
#calculating power for different post probability thresholds
# change this if you want different thresholds
results<-matrix(NA,nrow=nrow(sims),ncol=length(prob.thresh))
for(k in 1:nrow(sims)){
results[k,]<-mean_vec_gt(sims[k,],prob.thresh)
}
# Turning power results into dataframe and adding column names
res<-data.frame(p.control=pcontrol,p.treat=ptreat,prior.mean=priormu1,prior.sd=priorsd1,n.group=ntreat,round(results,2))
names(res)[6:(5+length(prob.thresh))]<-paste0(prob.thresh*100,"%")
# res$size.ben<-c("Any","5%","10%")
res.all[[i]]<-res
}
res.all
# Collapsing over effect size of interest
all_res<-dplyr::bind_rows(res.all)
all_res$size.ben<-rep(round(eff.size,2)*(-100),length(n.samp))
# Create flextable -----------
ft <- all_res%>%filter(size.ben==0)%>%
select(p.control,p.treat,n.group,
# size.ben,
"70%","75%","80%","85%","90%","95%")%>%
flextable() %>% set_header_labels(p.control = "",
p.treat = "",  n.group = ""
# size.ben=""
) %>%
set_table_properties( layout = "autofit", width = .8)
ft<-ft %>% add_header_row(values = c("Control Rate", "Treatment Rate",
"Num of patients/group",
# "RR Reduction",
"Bayesian power for different levels of evidence*"),
colwidths = c(1,1,1,ncol_keys(ft)-3)) %>%
add_footer_lines( values = "*Power to declare efficacy when Prob(RR < 1 ) > specified threshold")
ft<-ft <- set_caption(ft,
caption = "Bayesian power to declare efficacy depending on level of evidence (probability threshold)")
ft<-ft %>% align(align = "center",part="body") %>% align(align = "center",part="header") %>% autofit()
ft
q()
